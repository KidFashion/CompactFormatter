<?xml version="1.0" encoding="UTF-8"?><project name="CompactFormatter" default="build" basedir="."><!-- Here place a reference to to the location of nunit.framework assembly --><property name="nunit.assembly" value="C:\Programmi\NUnit V2.2\bin\nunit.framework.dll"/><property name="project.name" value="CompactFormatter"/><property name="project.site" value="http://www.freewebs.com/compactFormatter/"/><property name="project.longname" value="CompactFormatter - A generic formatter for the .NET Compact Framework"/><property name="project.version" value="1.0.0"/><property name="project.codename" value="GeNova"/><target name="showTargets"><echo message="build1.1  : builds the library for .NET 1.1 ."/><echo message="buildmono : builds the library for Mono framework."/><echo message="buildcf   : builds the library for .NET Compact Framework."/><echo message="builddoc  : builds API documentation using NDoc."/><echo message="clean     : cleans all binary files."/></target><target name="build" depends="clean">  <description>  Builds the library targetting the .NET Framework 1.1  </description></target><target name="init">    <description>    Target used to initialize properties and to create output directories needed     to build or compile project files    </description>    <echo message="${project.longname}."/>    <echo message="${project.site}"/>    <echo message="Angelo Scotto (scotto_a@hotmail.com)"/>    <tstamp>        <formatter pattern="dd MMM yyyy" property="project.date"/>    </tstamp>    <ifnot test="${property::exists('buildSurrogates')}">      <!-- Flags -->      <property name="buildSurrogates" value="false"/>          </ifnot>    <ifnot test="${property::exists('project.debug')}">      <!-- Flags -->      <property name="project.debug" value="false"/>          </ifnot>    <property name="dest" value="release"/>    <!--If doesn't exist-->     <mkdir dir="${dest}"/></target>    <target depends="init,clean" name="build1.1" description="Builds the library targetting the .NET Framework 1.1">	<!-- Change reference to use .Net Framework 1.1 as target -->	<property name="nant.settings.currentframework" value="net-1.1" />	<echo message="Building ${project.name} library (release version ${project.codename}:${project.version}) for framework ${nant.settings.currentframework}"/>	<echo if="${property::get-value('project.debug')}" message="Debug version"/>	<mkdir dir=".\release" failonerror="false"/>	<mkdir dir=".\release\${nant.settings.currentframework}" failonerror="false"/>        <csc target="library" output=".\release\${nant.settings.currentframework}\CompactFormatter.dll" debug="${project.debug}">	<arg value="-r:System.Data" if="${buildSurrogates}"/>	<sources>            <include name="src\*.cs"/>	    <include name="src\Attributes\*.cs"/>	    <include name="src\Exception\*.cs"/>	    <include name="src\Interfaces\*.cs"/>	    <include name="src\Surrogate\*.cs" if="${buildSurrogates}"/>	    <include name="src\Util\*.cs"/>	    <include if="${property::exists('unitTest')}" name="src\Tests\*.cs"/>	</sources>	  <references>            <include if="${property::exists('unitTest')}" name="${nunit.assembly}"/>	  </references>      </csc>            <echo if="${property::exists('unitTest')}" message="${nunit.assembly}"/>    </target>    <target depends="init,clean" name="buildmono" description="Builds the library targetting the Mono Framework 1.0">	<echo message="Building ${project.name} library (release version ${project.codename}:${project.version}) for the Mono Framework 1.0"/>	<echo if="${property::get-value('project.debug')}" message="Debug version"/>		<!-- Change reference to use .Net Compact Framework as target -->		<property name="nant.settings.currentframework" value="mono-1.0" />		<mkdir dir=".\release" failonerror="false"/>		<mkdir dir=".\release\${nant.settings.currentframework}" failonerror="false"/>          <csc target="library" output=".\release\${nant.settings.currentframework}\CompactFormatter.dll" debug="${project.debug}">		<arg value="-r:System.Data" if="${buildSurrogates}"/>		<sources> <include name="src\*.cs"/> 		<include name="src\Attributes\*.cs"/> 		<include name="src\Exception\*.cs"/> 		<include name="src\Interfaces\*.cs"/> 		<include name="src\Surrogate\*.cs" if="${buildSurrogates}"/>		<include name="src\Util\*.cs"/>  	        <include if="${property::exists('unitTest')}" name="src\Tests\*.cs"/>		</sources> 		<references>		   <include if="${property::exists('unitTest')}" name="${nunit.assembly}"/>		</references>	 </csc>    </target>    <target depends="init,clean" name="buildcf" description="Builds the library targetting the Compact Framework 1.0">	<echo message="Building ${project.name} library (release version ${project.codename}:${project.version}) for the .NET Compact Framework 1.0"/>	<echo if="${property::get-value('project.debug')}" message="Debug version"/>		<!-- Change reference to use .Net Compact Framework as target -->		<property name="nant.settings.currentframework" value="netcf-1.0" />		<mkdir dir=".\release" failonerror="false"/>		<mkdir dir=".\release\${nant.settings.currentframework}" failonerror="false"/>          <csc define="COMPACT" nostdlib="true" noconfig="true" target="library" output=".\release\${nant.settings.currentframework}\CompactFormatter.dll"  debug="${project.debug}">		<arg value="-r:System.Data" if="${buildSurrogates}"/>		<arg value="/filealign:512" />		<sources>		<include name="src\*.cs"/>		<include name="src\Attributes\*.cs"/>		<include name="src\Exception\*.cs"/>		<include name="src\Interfaces\*.cs"/>		<include name="src\Surrogate\*.cs" if="${buildSurrogates}"/>		<include name="src\Util\*.cs"/>		</sources>	    <references defaultexcludes="true">	        <include name="${nant.settings.currentframework.frameworkassemblydirectory}/mscorlib.dll"				frompath="false" />	        <include name="${nant.settings.currentframework.frameworkassemblydirectory}/System.Data.dll"				frompath="false" />	        <include name="${nant.settings.currentframework.frameworkassemblydirectory}/System.dll" frompath="false" />	    </references>      </csc>    </target>    <target name="buildDebug" description="Builds the library with debug symbols">	<echo message="Building ${project.name} library (debug version ${project.codename}:${project.version})"/>	    <mkdir dir=".\release" failonerror="false"/>          <csc target="library" output=".\release\CompactFormatter.dll" debug="true" >		<arg value="/filealign:512" />		<sources>		<includes name="src\*.cs"/>		<includes name="src\Attributes\*.cs"/>		<includes name="src\Exception\*.cs"/>		<includes name="src\Interfaces\*.cs"/>		<includes name="src\Surrogate\*.cs"/>		<includes name="src\Util\*.cs"/>		</sources>      </csc>    </target>    <target name="buildNUnit" depends="clean" description="Builds the library with NUnit V2.1 support">	<echo message="Building ${project.name} library (version ${project.version}) with NUnit support"/>	<property name="nant.settings.currentframework" value="net-1.1" />	    <mkdir dir=".\release" failonerror="false"/>              <csc target="library" output=".\release\CompactFormatter.dll" debug="true">		<arg value="/filealign:512" />		<sources>		<includes name="src\*.cs"/>		<includes name="src\Attributes\*.cs"/>		<includes name="src\Exception\*.cs"/>		<includes name="src\Interfaces\*.cs"/>		<includes name="src\Surrogate\*.cs"/>		<includes name="src\Util\*.cs"/>		<includes name="src\Tests\*.cs"/>		</sources>		<references>		<includes name="${nunit.assembly}"/>		</references>	  </csc>	</target>    <target name="test" depends="buildNUnit" description="Tests the library with NUnit V2.1" >	<echo message="Testing ${project.name} library (version ${project.codename}:${project.version}) with NUnit"/>	  <nunit2>		<test assemblyname=".\release\CompactFormatter.dll"/>	</nunit2>    </target>	<target name="buildXML" description="Builds the library with XML output for documentation">	<delete if="${file::exists('.\release\CompactFormatter.xml')}" file=".\release\CompactFormatter.xml" failonerror="false" />	<delete if="${file::exists('.\release\CompactFormatter.dll')}" file=".\release\CompactFormatter.dll" failonerror="false" />	    <mkdir dir=".\release" failonerror="false"/>		<echo message="Building ${project.name} library (version ${project.codename}:${project.version}) with XML Support"/>		<property name="nant.settings.currentframework" value="net-1.1" />          <csc target="library" output=".\release\CompactFormatter.dll" debug="true" doc=".\release\CompactFormatter.xml" >		<arg value="/filealign:512" />		<sources>		<includes name="src\*.cs"/>		<includes name="src\Attributes\*.cs"/>		<includes name="src\Exception\*.cs"/>		<includes name="src\Interfaces\*.cs"/>		<includes name="src\Surrogate\*.cs"/>		<includes name="src\Util\*.cs"/>		</sources>      </csc>	</target>    <target name="builddoc" depends="buildXML" description="Builds the documentation using NDoc">	<echo message="Building documentation for ${project.name} with NDoc"/>		<ndoc>	<assemblies>		<includes name=".\release\CompactFormatter.dll"/>	</assemblies>                <documenters>                    <documenter name="MSDN">                        <property name="OutputDirectory" value=".\docs\ndoc\MSDN" />                        <property name="Title" value="CompactFormatter" />                     </documenter>                </documenters> 	</ndoc>	</target>   <target name="clean" description="Deletes all output directories">	<echo message="Clean all binary files for project ${project.name}"/>	<delete if="${directory::exists('obj')}" dir=".\obj" failonerror="false" />	<delete if="${directory::exists('doc\ndoc')}" dir=".\doc\ndoc" failonerror="false" />	<delete if="${directory::exists('release')}" dir=".\release" failonerror="false" />	<delete if="${directory::exists('bin')}" dir=".\bin" failonerror="false" />	</target></project>